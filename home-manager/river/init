#!/bin/sh

layout_generator=rivertile

riverctl map normal Super Return spawn wezterm
riverctl map normal Alt+Shift F spawn "firefox"
riverctl map normal Alt+Shift+Control F spawn "firefox-vpn"
riverctl map normal Super T spawn "rofi -show run"

# Close window
riverctl map normal Alt+Shift Q close

# Exit river
riverctl map normal Control+Shift E exit

# Reload waybar
riverctl map normal Control+Shift+Super R spawn 'killall -SIGUSR2 .waybar-wrapped && dunstify "Reloaded waybar."'

# Control+J and Control+K to focus the next/previous view in the layout stack
# riverctl map normal Control J focus-view down
# riverctl map normal Control K focus-view previous

riverctl map normal Control+Shift K focus-view up
riverctl map normal Control+Shift J focus-view down
riverctl map normal Control+Shift H focus-view left
riverctl map normal Control+Shift L focus-view right

# Control+Shift+J and Control+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Control+Shift bracketright swap next
riverctl map normal Control+Shift bracketleft swap previous

riverctl map normal Control+Shift+Alt K swap up
riverctl map normal Control+Shift+Alt J swap down
riverctl map normal Control+Shift+Alt H swap left
riverctl map normal Control+Shift+Alt L swap right

# Control+Period and Control+Comma to focus the next/previous output
riverctl map normal Control Period focus-output next
riverctl map normal Control Comma focus-output previous

# Control+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Control+Shift Period send-to-output next
riverctl map normal Control+Shift Comma send-to-output previous

# Control+Return to bump the focused view to the top of the layout stack
riverctl map normal Control Return zoom

riverctl map normal Control+Shift MINUS send-layout-cmd "$layout_generator" "main-ratio -0.05"
riverctl map normal Control+Shift EQUAL send-layout-cmd "$layout_generator" "main-ratio +0.05"

# Control+Shift+H and Control+Shift+L to increment/decrement the main count of rivertile(1)
# riverctl map normal Control+Shift H send-layout-cmd "$layout_generator" "main-count +1"
# riverctl map normal Control+Shift L send-layout-cmd "$layout_generator" "main-count -1"

# Control+Alt+{H,J,K,L} to move views
riverctl map normal Control+Alt H move left 100
riverctl map normal Control+Alt J move down 100
riverctl map normal Control+Alt K move up 100
riverctl map normal Control+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal 100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical 100
riverctl map normal Super+Alt+Shift L resize horizontal -100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9); do
    tags=$((1 << (i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super "$i" set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift "$i" set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control "$i" toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control "$i" toggle-view-tags $tags
done

bluetooth_tag=$((1 << 9))
riverctl rule-add -title "Bluetooth Devices" tags $bluetooth_tag
riverctl map normal Super B set-focused-tags $bluetooth_tag

discord_tag=$((1 << 8))
riverctl rule-add -title "Discord" tags $discord_tag
riverctl map normal Super D set-focused-tags $discord_tag

games_tag=$((1 << 7))
riverctl rule-add -app-id "*steam*" tags $games_tag
riverctl map normal Super G set-focused-tags $games_tag

# web_browser_tag=$((1 << 1))
# riverctl rule-add -app-id "*firefox*" tags $web_browser_tag
# riverctl map normal Super W set-focused-tags $web_browser_tag

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 9) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up send-layout-cmd "$layout_generator" "main-location top"
riverctl map normal Super Right send-layout-cmd "$layout_generator" "main-location right"
riverctl map normal Super Down send-layout-cmd "$layout_generator" "main-location bottom"
riverctl map normal Super Left send-layout-cmd "$layout_generator" "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75
riverctl border-width 3

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout "$layout_generator"
$layout_generator -view-padding 6 -outer-padding 6 &

# TODO: Find a more NixOS-like way to do this.
# Reminder: this is so xdg-portal-desktop-wlr.service and xdg-portal-desktop.service will work.
# export XDG_CURRENT_DESKTOP=river
# systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river
# systemctl --user restart xdg-desktop-portal

riverctl spawn wezterm-gui
riverctl spawn blueman-applet
riverctl spawn blueman-manager
riverctl spawn discord
riverctl spawn steam
riverctl spawn lxqt-policykit-agent
